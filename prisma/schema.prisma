// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String     @id @default(cuid())
  firstName       String
  lastName        String
  email           String     @unique
  password        String
  phoneNumber     String
  isAuthenticated Boolean    @default(false)
  rating          Float      @default(0)
  location        Location[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  Service         Service[]
}

model Location {
  id           String   @id @default(cuid())
  street       String
  neighborhood String
  complement   String
  reference    String
  houseNumber  Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  User         User     @relation(fields: [userId], references: [id])
  userId       String
}

enum Category {
  ELECTRICIAN
  PAINTER
  BRICKLAYER
  GARDENER
  PLUMBER
  OTHERS
}

model Service {
  id              String            @id @default(cuid())
  name            String
  description     String
  price           Float
  category        Category
  serviceLocation ServiceLocation[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  User            User              @relation(fields: [userId], references: [id])
  userId          String
}

model ServiceLocation {
  id           String   @id @default(cuid())
  street       String
  neighborhood String
  complement   String
  reference    String
  number       Int      @default(0)
  serviceId    String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Service      Service  @relation(fields: [serviceId], references: [id])
}
